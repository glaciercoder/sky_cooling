/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1;

vertices
(
    (0    0   3)
    (0    4   3)
    (1    4   3)
    (1    0   3)
    (0    0   2.5)
    (0    0.5 2.5)
    (0    1   2.5)
    (0    1.5 2.5)
    (0    2   2.5)
    (0    2.5 2.5)
    (0    3   2.5)
    (0    3.5 2.5)
    (0    4   2.5)
    (1    4   2.5)
    (1    3.5 2.5)
    (1    3   2.5)
    (1    2.5 2.5)
    (1    2   2.5)
    (1    1.5 2.5)
    (1    1   2.5)
    (1    0.5 2.5)  //f19
    (1    0   2.5)
    (0.25 2   2)
    (0.25 3   2)
    (0.75 3   2)
    (0.75 2   2)
    (0    0   0)
    (0    4   0)
    (1    4   0)
    (1    0   0)
    (0.25 2   0)
    (0.25 3   0)
    (0.75 3   0)
    (0.75 2   0)


);

blocks
(
    hex (0 1 2 3 4 12 13 21)   (200 2 100) simpleGrading (1 1 1)
    hex (4 12 13 21 26 27 28 29) (200 2 20) simpleGrading (1 1 1)
    hex (22 23 24 25 30 31 32 33) (200 2 20) simpleGrading(1 1 1)
    
);

boundary
(

    leftAndRight
    {
        type wall;
        faces
        (
            (21 4 26 29)
            (12 13 28 27)
        );
    }
    

    cabinet
    {
        type wall;
        faces
        (
            (22 25 33 30)
            (24 23 31 32)
            (25 24 32 33)
            (22 23 31 30)
            (22 23 24 25)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (2 3 21 13)
	        (13 21 27 26)
            (0 1 12 4) // unclockwise
	        (4 12 27 26) // un
        );
    }



    Baffle
    {
        type wall;
        faces
        (
            (4 5 20 21)
            (6 7 18 19)
            (8 9 16 17)
            (10 11 14 15)
        );
    }


    // hot
    // {
    //     type wall;
    //     faces
    //     (
    //         (0 1 2 3)
    //     );
    // }

    cold
    {
        type wall;
        faces
        (
            (0 1 2 3)
        );
    }
    
    inlet
    {
	type patch;
	faces
	(
	   (3 0 4 21)	
	);
    }

    outlet
    {
	type patch;
	faces
	(
	  (1 2 13 12)
	);
    }
	
);

// ************************************************************************* //
